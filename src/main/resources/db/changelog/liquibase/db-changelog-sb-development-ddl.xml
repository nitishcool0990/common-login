<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
                        http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.4.xsd">
                   
   <changeSet author="Tripti" id="db-changelog-sb-development-ddl_20190920_001"
		failOnError="true" labels="create Tables script">
	<sql>
	CREATE TABLE `sb_user` (`user_id` INT NOT NULL, `email_id` VARCHAR(45) NOT NULL,
	`watsapp_num` VARCHAR(45) NOT NULL,
	`password` VARCHAR(45) NOT NULL,
	`client_name` VARCHAR(45) NULL,
	`is_admin` TINYINT NULL,
	`is_active` TINYTEXT NOT NULL,
	`last_login` TIMESTAMP NULL,
	`reason` VARCHAR(45) NULL,
	`created_on` TIMESTAMP NOT NULL,
	`modified_on` TIMESTAMP NULL,
	PRIMARY KEY (`user_id`),
	UNIQUE INDEX `email_id_UNIQUE` (`email_id` ASC),
	UNIQUE INDEX `watsapp_num_UNIQUE` (`watsapp_num` ASC));

	CREATE TABLE `sb_user_profile` ( `user_profile_id` INT(11) NOT NULL, `user_id` INT(11) NOT NULL,
	`first_name` VARCHAR(45) NOT NULL,
	`last_name` VARCHAR(45) NULL,
	`mobile_num` INT NULL,
	`default_add` VARCHAR(45) NOT NULL,
	`secondary_add` VARCHAR(45) NULL,
	`modified_on` TIMESTAMP NULL,
	`created_on` TIMESTAMP NULL,
	PRIMARY KEY (`user_profile_id`),
	UNIQUE INDEX `user_id_UNIQUE` (`user_id` ASC));
	
	</sql>  
    </changeSet>                
                      

<changeSet author="Tripti" id="db-changelog-sb-development-ddl_20190923_001"
		failOnError="true" labels="sb_script">
	<sql>	
	CREATE TABLE  `sb_item` (
  `item_code` INT NOT NULL,
  `item_name` VARCHAR(45) NOT NULL,
  `image_link` VARCHAR(45) NULL,
  `item_category` VARCHAR(45) NULL,
  `is_active` TINYTEXT NULL,
  `is_display` TINYTEXT NULL,
  `created_on` TIMESTAMP NULL,
  PRIMARY KEY (`item_code`));

  
  CREATE TABLE  `sb_measure` (
  `measure_id` INT NOT NULL,
  `measure_code` VARCHAR(45) NOT NULL,
  `value` INT NULL,
  `unit` VARCHAR(45) NULL,
  `is_active` TINYTEXT NULL,
  `is_dispaly` TINYTEXT NULL,
  `created_on` TIMESTAMP NULL,
  PRIMARY KEY (`measure_id`));

  
  
  CREATE TABLE  `sb_daily_stock` (
  `stock_id` INT NOT NULL,
  `item_code` VARCHAR(45) NULL,
  `wholesale_price` VARCHAR(45) NULL COMMENT 'price wil be in1 kg unit ',
  `total_quantity` VARCHAR(45) NULL COMMENT 'this will contain id of sb_measure table',
  `real_price` VARCHAR(45) NULL,
  `sold_quantity` VARCHAR(45) NULL,
  `waste_quantity` VARCHAR(45) NULL,
  `is_sold` TINYTEXT NULL,
  `is_active` TINYTEXT NULL,
  `modified_on` TIMESTAMP NULL,
  `created_on` TIMESTAMP NULL,
  PRIMARY KEY (`stock_id`));
  
  CREATE TABLE  `sb_item_details` (
  `item_details_id` INT NOT NULL,
  `item_code` VARCHAR(45) NULL,
  `item_measure_code` VARCHAR(45) NULL,
  `item_price` VARCHAR(45) NULL COMMENT 'market Price',
  `item_retail_price` VARCHAR(45) NULL COMMENT 'Actual Price in which customer will bought the Item after discount',
  `is_sold` TINYTEXT NULL,
  `is_active` TINYTEXT NULL,
  `modified_on` TIMESTAMP NULL,
  `created_on` TIMESTAMP NULL,
  PRIMARY KEY (`item_details_id`))
COMMENT = 'Item will shows to user with price and unit';


CREATE TABLE  `sb_invoice` (
  `invoice_id` INT NOT NULL,
  `user_id` VARCHAR(45) NOT NULL,
  `sales_use_id` VARCHAR(45) NOT NULL,
  `total_wholesale_amount` INT NULL,
  `total_sale_amount` INT NULL,
  `total_discount` VARCHAR(45) NULL,
  `total_net_amount` INT NULL,
  `coupon_id` VARCHAR(45) NULL,
  `is_display` TINYTEXT NULL,
  `created_on` TIMESTAMP NULL,
  PRIMARY KEY (`invoice_id`))
COMMENT = 'this table will generate invoice unique Id';

CREATE TABLE `sb_invoice_detail` (
  `invoice_detail_id` INT NOT NULL,
  `invoice_id` VARCHAR(45) NOT NULL,
  `item_code` VARCHAR(45) NOT NULL,
  `item_name` VARCHAR(45) NULL,
  `item_measure_code` VARCHAR(45) NULL,
  `item_wholesale_price` INT NULL,
  `item_sale_price` INT NULL,
  `discount` VARCHAR(45) NULL,
  `modified_on` VARCHAR(45) NULL,
  `created_on` VARCHAR(45) NULL,
  PRIMARY KEY (`invoice_detail_id`));
  
 
  CREATE TABLE  `sb_return_detail` (
  `return_detail_id` INT NOT NULL,
  `invoice_id` VARCHAR(45) NOT NULL,
  `item_code` VARCHAR(45) NOT NULL,
  `item_name` VARCHAR(45) NULL,
  `purchase_measure_code` VARCHAR(45) NULL COMMENT 'purchase  quantity of item',
  `return_measure_code` VARCHAR(45) NULL COMMENT 'return quantity of item',
  `refunded_amt` INT NULL,
  `created_on` TIMESTAMP NOT NULL,
  PRIMARY KEY (`return_detail_id`))
COMMENT = 'this table will contain detail of return items';        
   </sql>  
    </changeSet>                
                        
</databaseChangeLog>